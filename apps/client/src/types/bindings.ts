/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

export function setupNewVault(input: SetupVaultInput) {
    return invoke()<SetupVaultResponse>("setup_new_vault", { input })
}

export function getAllVaults() {
    return invoke()<GetAllVaultsResponse>("get_all_vaults")
}

export function findVault(id: number) {
    return invoke()<FindVaultResponse>("find_vault", { id })
}

export type Vault = { id: number; name: string; path: string }
export type RepositoryError = { DatabaseError: string } | { NotFoundByPrimaryKey: [string, number] }
export type FindVaultResponse = { vault: Vault | null; error: RepositoryError | null }
export type SetupVaultResponse = { vault_id: number | null; error: RepositoryError | null }
export type GetAllVaultsResponse = { error: RepositoryError | null; vaults: Vault[] }
export type SetupVaultInput = { name: string; location: string }
